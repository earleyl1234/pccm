@using Microsoft.AspNet.Identity
@using PCCM.Web.Extensions
@using PCCM.Web.Resources
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            @if (Request.IsAuthenticated && User.IsInRole("Admin"))
            {
            <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@UIStrings.Admin <span class="caret"></span></a>
                <ul class="dropdown-menu">
                    <li>@Html.ActionLink(UIStrings.Roles, "Index", "RolesAdmin")</li>
                    <li>@Html.ActionLink(UIStrings.Users, "Index", "UsersAdmin")</li>
                </ul>
            </li>
            }
            <li class="short-name-code">
                @Html.ActionLink(User.Identity.GetUserFullName(), "Index", "Manage", routeValues: null, htmlAttributes: new {title = "Manage"})
            </li>
            <li><a href="javascript:document.getElementById('logoutForm').submit()">@UIStrings.Logout</a></li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink(UIStrings.Register, "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink(UIStrings.Login, "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
